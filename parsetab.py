
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIV EQUAL ID LPAREN MINUS MULT NUMBER PLUS RPARENstatement : ID EQUAL expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULT expression\n                  | expression DIV expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID'
    
_lr_action_items = {'ID':([0,4,6,7,8,9,10,],[2,12,12,12,12,12,12,]),'LPAREN':([0,4,6,7,8,9,10,],[4,4,4,4,4,4,4,]),'NUMBER':([0,4,6,7,8,9,10,],[5,5,5,5,5,5,5,]),'$end':([1,2,3,5,12,13,14,15,16,17,18,],[0,-9,-2,-8,-9,-1,-3,-4,-5,-6,-7,]),'EQUAL':([2,],[6,]),'PLUS':([2,3,5,11,12,13,14,15,16,17,18,],[-9,7,-8,7,-9,7,7,7,7,7,-7,]),'MINUS':([2,3,5,11,12,13,14,15,16,17,18,],[-9,8,-8,8,-9,8,8,8,8,8,-7,]),'MULT':([2,3,5,11,12,13,14,15,16,17,18,],[-9,9,-8,9,-9,9,9,9,9,9,-7,]),'DIV':([2,3,5,11,12,13,14,15,16,17,18,],[-9,10,-8,10,-9,10,10,10,10,10,-7,]),'RPAREN':([5,11,12,14,15,16,17,18,],[-8,18,-9,-3,-4,-5,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,6,7,8,9,10,],[3,11,13,14,15,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUAL expression','statement',3,'p_statement_assign','as.py',51),
  ('statement -> expression','statement',1,'p_statement_expr','as.py',59),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','as.py',64),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','as.py',65),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','as.py',66),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','as.py',67),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','as.py',79),
  ('expression -> NUMBER','expression',1,'p_expression_number','as.py',84),
  ('expression -> ID','expression',1,'p_expression_id','as.py',89),
]
