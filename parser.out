Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ID EQUAL expression
Rule 2     statement -> expression
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression MULT expression
Rule 6     expression -> expression DIV expression
Rule 7     expression -> LPAREN expression RPAREN
Rule 8     expression -> NUMBER
Rule 9     expression -> ID

Terminals, with rules where they appear

DIV                  : 6
EQUAL                : 1
ID                   : 1 9
LPAREN               : 7
MINUS                : 4
MULT                 : 5
NUMBER               : 8
PLUS                 : 3
RPAREN               : 7
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ID EQUAL expression
    (2) statement -> . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression MULT expression
    (6) expression -> . expression DIV expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . ID

    ID              shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> ID . EQUAL expression
    (9) expression -> ID .

    EQUAL           shift and go to state 6
    PLUS            reduce using rule 9 (expression -> ID .)
    MINUS           reduce using rule 9 (expression -> ID .)
    MULT            reduce using rule 9 (expression -> ID .)
    DIV             reduce using rule 9 (expression -> ID .)
    $end            reduce using rule 9 (expression -> ID .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . MULT expression
    (6) expression -> expression . DIV expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MULT            shift and go to state 9
    DIV             shift and go to state 10


state 4

    (7) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression MULT expression
    (6) expression -> . expression DIV expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . ID

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 11

state 5

    (8) expression -> NUMBER .

    PLUS            reduce using rule 8 (expression -> NUMBER .)
    MINUS           reduce using rule 8 (expression -> NUMBER .)
    MULT            reduce using rule 8 (expression -> NUMBER .)
    DIV             reduce using rule 8 (expression -> NUMBER .)
    $end            reduce using rule 8 (expression -> NUMBER .)
    RPAREN          reduce using rule 8 (expression -> NUMBER .)


state 6

    (1) statement -> ID EQUAL . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression MULT expression
    (6) expression -> . expression DIV expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . ID

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 13

state 7

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression MULT expression
    (6) expression -> . expression DIV expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . ID

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 14

state 8

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression MULT expression
    (6) expression -> . expression DIV expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . ID

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 15

state 9

    (5) expression -> expression MULT . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression MULT expression
    (6) expression -> . expression DIV expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . ID

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 16

state 10

    (6) expression -> expression DIV . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression MULT expression
    (6) expression -> . expression DIV expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . ID

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    ID              shift and go to state 12

    expression                     shift and go to state 17

state 11

    (7) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . MULT expression
    (6) expression -> expression . DIV expression

    RPAREN          shift and go to state 18
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MULT            shift and go to state 9
    DIV             shift and go to state 10


state 12

    (9) expression -> ID .

    RPAREN          reduce using rule 9 (expression -> ID .)
    PLUS            reduce using rule 9 (expression -> ID .)
    MINUS           reduce using rule 9 (expression -> ID .)
    MULT            reduce using rule 9 (expression -> ID .)
    DIV             reduce using rule 9 (expression -> ID .)
    $end            reduce using rule 9 (expression -> ID .)


state 13

    (1) statement -> ID EQUAL expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . MULT expression
    (6) expression -> expression . DIV expression

    $end            reduce using rule 1 (statement -> ID EQUAL expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MULT            shift and go to state 9
    DIV             shift and go to state 10


state 14

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . MULT expression
    (6) expression -> expression . DIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MULT            shift and go to state 9
    DIV             shift and go to state 10

  ! PLUS            [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! MULT            [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 3 (expression -> expression PLUS expression .) ]


state 15

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . MULT expression
    (6) expression -> expression . DIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MULT            shift and go to state 9
    DIV             shift and go to state 10

  ! PLUS            [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! MULT            [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 4 (expression -> expression MINUS expression .) ]


state 16

    (5) expression -> expression MULT expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . MULT expression
    (6) expression -> expression . DIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    $end            reduce using rule 5 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 5 (expression -> expression MULT expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MULT            shift and go to state 9
    DIV             shift and go to state 10

  ! PLUS            [ reduce using rule 5 (expression -> expression MULT expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression MULT expression .) ]
  ! MULT            [ reduce using rule 5 (expression -> expression MULT expression .) ]
  ! DIV             [ reduce using rule 5 (expression -> expression MULT expression .) ]


state 17

    (6) expression -> expression DIV expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . MULT expression
    (6) expression -> expression . DIV expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    $end            reduce using rule 6 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIV expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MULT            shift and go to state 9
    DIV             shift and go to state 10

  ! PLUS            [ reduce using rule 6 (expression -> expression DIV expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression DIV expression .) ]
  ! MULT            [ reduce using rule 6 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 6 (expression -> expression DIV expression .) ]


state 18

    (7) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 7 (expression -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MULT in state 14 resolved as shift
WARNING: shift/reduce conflict for DIV in state 14 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MULT in state 15 resolved as shift
WARNING: shift/reduce conflict for DIV in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MULT in state 16 resolved as shift
WARNING: shift/reduce conflict for DIV in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MULT in state 17 resolved as shift
WARNING: shift/reduce conflict for DIV in state 17 resolved as shift
